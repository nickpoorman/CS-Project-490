 74.71.91.160 

//action methods
    private void parseAttack(String[] command) {
        //USAGE: attack <PLAYER> <SKILL 1> <SKILL 2> <SKILL n>
        //begin attack on target
        //queue attack skills to be run
        //if no skills given does minimal damage
    }

    private void parseCast(String[] command) {
        //USAGE: cast <PLAYER> <SKILL 1> <SKILL 2> <SKILL n>
        //add to the buffer the skill(s) to be cast on a given user
    }

    private void parseEmote(String[] command) {
        //do all the emote stuff here
    }

    private void parseExit(String[] command) {
        //move the character out the only exit in the room
        //calls the out command
    }

    private void parseGo(String[] command) {
        //do all the movement stuff here
    }

    private void parseHelp(String[] command) {
        //print out the help menu of all the commands
        //filter for help on a given command and list the help for that command
    }

    private void parseHome(String[] command) {
        //move the character to its home
    }

    private void parseInsertCast(String[] command) {
        //USAGE: ic <SKILL> <PRIORITY(0-n)>
        //insert the skill to cast into the buffer by priority 0 being top priority
        //if no priority given then adds skill to the end
    }

    private void parseInventory(String[] command) {
        //display the chracters inventory contents
    }

    private void parseLook(String[] command) {
        //display the contents of the object the character is looking at
    }

    private void parseMOTD(String[] command) {
        //displays the current message of the day for the server
    }

    private void parseOut(String[] command) {
        //moves the character out of the exit if there is only one exit in the room
        //calls the exit command for the only exit in the room
    }

    private void parseRest(String[] command) {
        //allows the player to regain health, mana, etc. faster
    }

    private void parseSay(String[] command) {
        //have the character say something to the room
        System.out.println("<PlayerName>: " + aToString(command));
    }

    private void parseTakeOff(String[] command) {
        //take the item off
        //USAGE: take off <ITEM>
    }

    private void parseTarget(String[] command) {
        //sets the users target to make it easier to cast things on a given target
        //USAGE: target <PLAYER> <SET_TARGET_ID>
        //if no value for SET_TARGET_ID is given then the target is set to '0'
        //....this is done because a player name might be to long to type in every
        //    time you want to do something to that player
        //    instead of saying <PLAYER> you would use @<0-n> for the given set target
    }

    private void parseTo(String[] command) {
        //speak to a user in the room, sends the message to everyone in the room
    }

    private void parseUse(String[] command) {
        //use the item
        //USAGE: use <ITEM>
        // if the item is a consumable use up one of the item
        // if the item is able to be equiped, then equip the item by calling the wear command
        // if the item is already equiped and has a function then use the function of the item
    }

    private void parseWear(String[] command) {
        //USAGE: wear <ITEM> <SLOT>
        //put the item on if no SLOT is given
    }

    private void parseWhisper(String[] command) {
        //send a message to a user in the game
    }

    private void parseFinger(String[] command) {
        //if no other parameters displays all the user logged in
        //if a user was entered as a parameter then it displays info on that user
    }